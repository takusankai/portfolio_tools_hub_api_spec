openapi: 3.1.0
info:
  title: Portfolio Tools Hub API
  version: 1.0.0
  description: API for Portfolio Tools Hub
servers:
  - url: https://api.example.com/v1
    description: 本番環境
  - url: https://localhost:3000/v1
    description: 開発環境
tags:
  - name: general
    description: 一般的なエンドポイント
  - name: auth
    description: 認証関連のエンドポイント
  - name: users
    description: ユーザー関連のエンドポイント
paths:
  /:
    get:
      summary: ルートエンドポイント
      description: APIの起動を確認するためのエンドポイント
      operationId: checkRoot
      tags:
        - general
      parameters:
        - $ref: '#/components/parameters/checkRootRequest'
      responses:
        '200':
          description: 正常応答
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkRootResponse'
              examples:
                withQuery:
                  value:
                    simpleMessage: API is running correctly
                    echoQuery: hello world
                    timestamp: '2023-07-01T12:00:00Z'
                withoutQuery:
                  value:
                    simpleMessage: API is running correctly
                    echoQuery: null
                    timestamp: '2023-07-01T12:00:00Z'
        '400':
          description: 汎用 BadRequest
          $ref: '#/components/responses/BadRequest'
        '401':
          description: 汎用 Unauthorized
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 汎用 Forbidden
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 汎用 NotFound
          $ref: '#/components/responses/NotFound'
        '500':
          description: 汎用 InternalServerError
          $ref: '#/components/responses/InternalServerError'
  /signUp:
    get:
      summary: ユーザーのサインアップ
      description: ユーザーのサインアップを行うエンドポイント
      operationId: signUp
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/signUpRequest'
      responses:
        '200':
          description: 正常応答
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signUpResponse'
              examples:
                withQuery:
                  value:
                    simpleMessage: signUp is developing now
                    echoQuery: hello world
                    timestamp: '2023-07-01T12:00:00Z'
                withoutQuery:
                  value:
                    simpleMessage: signUp is developing now
                    echoQuery: null
                    timestamp: '2023-07-01T12:00:00Z'
        '400':
          description: 汎用 BadRequest
          $ref: '#/components/responses/BadRequest'
        '401':
          description: 汎用 Unauthorized
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 汎用 Forbidden
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 汎用 NotFound
          $ref: '#/components/responses/NotFound'
        '500':
          description: 汎用 InternalServerError
          $ref: '#/components/responses/InternalServerError'
  /userIdList:
    get:
      summary: ユーザーIDリスト取得
      description: ユーザーIDリストを取得するエンドポイント
      operationId: getUserIdList
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/getUserIdListRequest'
      responses:
        '200':
          description: 正常応答
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserIdListResponse'
              examples:
                default:
                  value:
                    userIdList:
                      - user1
                      - user2
                      - user3
                    total: 12
        '400':
          description: 汎用 BadRequest
          $ref: '#/components/responses/BadRequest'
        '401':
          description: 汎用 Unauthorized
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 汎用 Forbidden
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 汎用 NotFound
          $ref: '#/components/responses/NotFound'
        '500':
          description: 汎用 InternalServerError
          $ref: '#/components/responses/InternalServerError'
  /userNameList:
    get:
      summary: ユーザー名リスト取得
      description: ユーザー名リストを取得するエンドポイント
      operationId: getUserNameList
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/getUserNameListRequest'
      responses:
        '200':
          description: 正常応答
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserNameListResponse'
              examples:
                default:
                  value:
                    userNameList:
                      - user1
                      - user2
                      - user3
                    total: 12
        '400':
          description: 汎用 BadRequest
          $ref: '#/components/responses/BadRequest'
        '401':
          description: 汎用 Unauthorized
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 汎用 Forbidden
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 汎用 NotFound
          $ref: '#/components/responses/NotFound'
        '500':
          description: 汎用 InternalServerError
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    rootMessageResponse:
      allOf:
        - $ref: '#/components/schemas/checkRootResponse'
    signUp:
      allOf:
        - $ref: '#/components/schemas/signUpResponse'
    userIdList:
      allOf:
        - $ref: '#/components/schemas/getUserIdListResponse'
    userNameList:
      allOf:
        - $ref: '#/components/schemas/getUserNameListResponse'
    checkRootResponse:
      type: object
      required:
        - simpleMessage
        - echoQuery
        - timestamp
      properties:
        simpleMessage:
          type: string
          description: シンプルなメッセージ
          example: API is running correctly
        echoQuery:
          type: string
          description: クエリのエコー
          example: sample query
        timestamp:
          type: string
          format: date-time
          description: レスポンスタイムスタンプ
          example: '2023-07-01T12:00:00Z'
    signUpResponse:
      type: object
      required:
        - simpleMessage
        - echoQuery
        - timestamp
      properties:
        simpleMessage:
          type: string
          description: シンプルなメッセージ
          example: signUp is developing now
        echoQuery:
          type: string
          description: クエリのエコー
          example: sample query
        timestamp:
          type: string
          format: date-time
          description: レスポンスタイムスタンプ
          example: '2023-07-01T12:00:00Z'
    getUserIdListResponse:
      type: object
      required:
        - userIdList
      properties:
        userIdList:
          type: array
          items:
            type: integer
          description: ユーザーID
          example:
            - 1
            - 2
            - 3
        total:
          type: integer
          description: 合計ユーザー数
          example: 12
    getUserNameListResponse:
      type: object
      required:
        - userNameList
      properties:
        userNameList:
          type: array
          items:
            type: string
          description: ユーザー名リスト
          example:
            - user1
            - user2
            - user3
        total:
          type: integer
          description: 合計ユーザー数
          example: 12
  parameters:
    checkRootRequest:
      name: sampleQuery
      in: query
      description: サンプルクエリ
      required: false
      schema:
        type: string
        example: sample query
    signUpRequest:
      name: sampleQuery
      in: query
      description: サンプルクエリ
      required: false
      schema:
        type: string
        example: sample query
    getUserIdListRequest:
      name: limit
      in: query
      description: 取得するユーザー数の上限
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
        example: 20
    getUserNameListRequest:
      name: limit
      in: query
      description: 取得するユーザー数の上限
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
        example: 20
  responses:
    BadRequest:
      description: リクエストの形式が不正です
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: エラーメッセージ
              details:
                type: array
                description: バリデーションエラーの詳細
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      description: エラーのあるフィールド名
                    message:
                      type: string
                      description: 具体的なエラー内容
            required:
              - error
    Unauthorized:
      description: 認証が必要です
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: エラーメッセージ
                example: 認証が必要です
            required:
              - error
    Forbidden:
      description: このリソースにアクセスする権限がありません
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: エラーメッセージ
                example: アクセス権限がありません
            required:
              - error
    NotFound:
      description: リクエストされたリソースが見つかりません
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: エラーメッセージ
                example: リソースが見つかりません
            required:
              - error
    InternalServerError:
      description: サーバー内部でエラーが発生しました
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: エラーメッセージ
                example: 内部サーバーエラーが発生しました
            required:
              - error
